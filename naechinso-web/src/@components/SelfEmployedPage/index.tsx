import { useEffect, useState } from "react";
import styled from "styled-components";

import { routePaths } from "../../core/routes/path";
import { IJobType } from "../../types/member";
import { ConsultantIconBtn, FixedHeader, MoveNextPageBtn, ShortInputBox } from "../@common";

export default function SelfEmployedPage() {
  const [job, setJob] = useState<IJobType>({
    jobName: "ÏûêÏòÅÏóÖÏûê",
    jobPart: "",
    jobLocation: "Í∞ïÎÇ®Íµ¨",
  });
  const [activeBtn, setActiveBtn] = useState(false);

  useEffect(() => {
    // ÏÉàÎ°úÍ≥†Ïπ® Ïãú Ïù¥Ï†ÑÏóê localÏóê Ï†ÄÏû•Îêú jobInfo Ï¥àÍ∏∞Í∞íÏúºÎ°ú ÏÑ∏ÌåÖ
    const jobInfoOfLocal = localStorage.getItem("jobInfo") as string;
    const jobInfo = JSON.parse(jobInfoOfLocal);
    if (jobInfo) {
      setJob({ ...job, jobName: "ÏûêÏòÅÏóÖÏûê", jobPart: jobInfo.jobPart });
      setActiveBtn(true);
    }
  }, []);

  useEffect(() => {
    //  ActiveButton ÌôúÏÑ±Ìôî
    if (job.jobPart.length > 0) setActiveBtn(true);
    else setActiveBtn(false);
  }, [job]);

  const handleJobPartInput = (e: React.ChangeEvent<HTMLInputElement>) => {
    // ÏßÅÏóÖÏùÑ Í¥ÄÎ¶¨ÌïòÎäî Ìï®Ïàò
    setJob({ ...job, jobPart: e.target.value });
  };

  const saveJobInfoInLocal = () => {
    // Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄÏóê Ï†ÄÏû•
    localStorage.setItem("jobInfo", JSON.stringify(job));
  };

  return (
    <St.SelfEmployedPage>
      <FixedHeader header="Ï∂îÏ≤úÏù∏ ÏÜåÍ∞ú" progressRate={60} title1="üíº" title2="Ïñ¥Îñ§ ÏùºÏùÑ Ìï¥?" />
      <ShortInputBox
        label="Î∂ÑÎ•ò"
        placeholder="ex. ÌîÑÎ†åÏπò Î†àÏä§ÌÜ†Îûë, ÍΩÉÏßë Îì±"
        value={job.jobPart}
        onChange={handleJobPartInput}
        step={1}
      />

      <ConsultantIconBtn />
      <MoveNextPageBtn
        nextPage={routePaths.SelfEmployedCertified}
        disabled={!activeBtn}
        title="Îã§Ïùå"
        handleState={saveJobInfoInLocal}
      />
    </St.SelfEmployedPage>
  );
}

const St = {
  SelfEmployedPage: styled.main`
    padding: 17rem 2rem 0;
  `,
};
