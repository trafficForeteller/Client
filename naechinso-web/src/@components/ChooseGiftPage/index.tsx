import { AxiosError } from "axios";
import { useEffect, useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import styled from "styled-components";

import { postMemberReissue } from "../../apis/member.api";
import { patchRecommendFriendDetail } from "../../apis/recommend.api";
import { routePaths } from "../../core/routes/path";
import { IPatchFriendDetail } from "../../types/recommend";
import { ConsultantIconBtn, FixedHeader } from "../@common";

export default function ChooseGiftPage() {
  const navigate = useNavigate();
  const { state } = useLocation();
  const [patchRecommend, setPatchRecommend] = useState<IPatchFriendDetail>({
    appealDetail: "",
    appeals: [],
    dontGo: "",
    priceType: "",
  });

  useEffect(() => {
    setPatchRecommend({
      ...patchRecommend,
      appealDetail: state.patchRecommend.appealDetail,
      appeals: state.patchRecommend.appeals,
      dontGo: state.patchRecommend.dontGo,
    });
  }, []);

  useEffect(() => {
    if (patchRecommend.priceType !== "") handlePatchRecommend();
  }, [patchRecommend]);

  const handlePatchRecommend = async () => {
    //keyword, appealDetail, dontGo POST ÏÑ±Í≥µÌï† Ïãú
    await patchRecommendFriendDetail(
      patchRecommend,
      localStorage.getItem("accessToken"),
      localStorage.getItem("uuid"),
      handleSuccessPatchRecommend,
      handleFailRequest,
      handleReissuePatchRecommend,
    );
  };

  const handleSuccessPatchRecommend = () => {
    // Ï∂îÏ≤úÏÇ¨ PATCH ÏÑ±Í≥µÌï† Ïãú
    localStorage.setItem("priceType", patchRecommend.priceType);
    navigate(routePaths.Finish);
  };

  const handleFailRequest = (err: AxiosError) => {
    // keyword, appealDetail, dontG POST Ïã§Ìå®Ìï† Ïãú
    err.response && console.log(err.response.data);
    navigate(routePaths.Error);
  };

  const handleReissuePatchRecommend = async () => {
    // Ïï°ÏÑ∏Ïä§ ÌÜ†ÌÅ∞ ÎßåÎ£å ÏùëÎãµÏù∏ÏßÄ ÌôïÏù∏
    const userData = await postMemberReissue(localStorage.getItem("accessToken"), localStorage.getItem("refreshToken"));
    if (userData) {
      localStorage.setItem("accessToken", userData["accessToken"]);
      localStorage.setItem("refreshToken", userData["refreshToken"]);
    }
    handlePatchRecommend();
  };

  const handleChooseSunguri = () => {
    // Ïç¨Íµ¨Î¶¨ ÏÑ†ÌÉùÏãú
    setPatchRecommend({
      ...patchRecommend,
      priceType: "SUNGURI",
    });
  };

  const handleChooseMyRecommend = () => {
    // Ï∂îÏ≤úÏÇ¨Î≥¥Í∏∞ ÏÑ†ÌÉù Ïãú
    setPatchRecommend({
      ...patchRecommend,
      priceType: "MY_REC",
    });
  };

  return (
    <St.ChooseGiftPage>
      <FixedHeader header="Ï∂îÏ≤úÏù∏ Î≥¥ÏÉÅ" progressRate={98} title1="üéÅ" title2="Î∞õÍ≥† Ïã∂ÏùÄ ÏÑ†Î¨ºÏùÑ ÏÑ†ÌÉùÌï¥Ï§ò!" />

      <St.ButtonWrapper>
        <St.ChooseWorkButton type="button" onClick={handleChooseSunguri}>
          Ïç¨Íµ¨Î¶¨ 20Í∞ú
        </St.ChooseWorkButton>
        <St.ChooseWorkButton type="button" onClick={handleChooseMyRecommend}>
          ÎÇ¥ Ï∂îÏ≤úÏÇ¨ Î≥¥Í∏∞
        </St.ChooseWorkButton>
      </St.ButtonWrapper>

      <ConsultantIconBtn />
    </St.ChooseGiftPage>
  );
}

const St = {
  ChooseGiftPage: styled.main`
    padding: 22rem 2rem 0;
  `,
  ButtonWrapper: styled.section`
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.6rem;
  `,
  ChooseWorkButton: styled.button`
    width: 33.5rem;
    height: 7rem;
    padding: 2rem;
    background-color: ${({ theme }) => theme.colors.neural};
    border-radius: 16px;
    color: ${({ theme }) => theme.colors.brown};
    ${({ theme }) => theme.fonts.sub2};

    display: flex;
    align-items: center;

    @media only screen and (min-width: 375px) and (max-width: 600px) {
      width: 100%;
    }
  `,
};
